darker

Image		Pixels above threshold		Seq			Par				Speedup

with square GRID

image00		111 (0.01%)					0.002416	0.000156		15.48
image01		231 (0.00%)					0.036925	0.000351		105.19
image02		135 (0.00%)					0.033726	0.000658		51.25
image03		735 (0.00%)					0.340821	0.002287		149
image04 	1503 (0.00%)				0.151429	0.001912		79.19
image05		9 (0.00%)					0.445976	0.003211		138.89
image06		4206 (0.00%)				0.588814	0.005860		100.48

standard way uni (consecutive)

exe		grid		threads idle	speedup

0.000074	512x2		0			32.65
0.000211	1024x10		0			175.00
0.000273	1440x10		0			123.54
0.001568	5024x20		482304		217.36
0.001088	4096x16		0			139.18
0.002195	3662x36		607892		203.18
0.003867	6400x40		0			152.27

standard way uni (right side overflow)

0.000074
0.000215
0.000290
0.001656
0.001168
0.002199
0.004208


standard way square block

0.000083	32x32 		0			29.11
0.000282	64x160		0			130.94
0.000384	90x160		0			87.83
0.002227	314x314		0			153.04
0.001815	256x256		0			83.43
0.003170	229x566		40084		140.69
0.005838	400x640		0			100.86


square block square

0.000156	32X32		0			15.49
0.000358	102x102		41984		103.14
0.000406	120x120		0			83.07
0.002290	314X314		0			148.83
0.001918	256x256		0			78.95	
0.003170	360x360		36500		140.69
0.006456	506X506		9216		91.20	


uni square

0.000076	32X32		0			31.79
0.000209	102x102		41984		176.67
0.000276	120x120		0			122.20
0.001537	314X314		0			221.74
0.001085	256x256		0			139.57
0.002076	360x360		36500		214.82
0.003872	506X506		9216		152.07


uni more 11

0,000149	16,21
0,000248	148,89
0,000273	123,54
0,001355	251,53
0,000987	153,42
0,001738	256,60
0,003255	180,90


uni more 8

0.000147
0.000253
0.000271
0.001361
0.000995
0.001761
0.003346

image00	0.002416 0.000148	16.32	0.000149
image01 0.036925 0.000257	143.67	0.000246
image02	0.033726 0.000301	112.04	0.000280
image03	0.340821 0.001454	234.40	0.001350
image04	0.151429 0.001043	145.18	0.000990
image05	0.445976 0.001832	234.43	0.001735
image06	0.588814 0.003531	166.75	0.003283





with square GRID

0.000158
0.000330
0.000423
0.002301 
0.001921
0.003170
0.006453

with grid

0.000158
0.000341
0.000432
0.002270
0.001911
0.003222
0.005883


with grid UNI

image00		0.000151	16	0.000149
image01		0.000259	142	0.000276
image02		0.000332	101.58	0.000339
image03		0.001788	190.61	0.001574
image04		0.001290	117.38	0.001176
image05		0.002307	193.31	0.002142
image06		0.004403	133.73	0.003905

with only 1 row of indexes

image00	0.000150
image01	0.000246
image02	0.000318
image03	0.001661
image04	0.001213
image05	0.002231
image06	0.004082

with uni, 4 pixels per thread

image00				0.000149
image01 0.000269	0.000256
image02	0.000315	0.000293
image03	0.001541	0.001441
image04	0.001109	0.001067
image05	0.001982	0.001873
image06	0.003750	0.003541

with uni, 8 pixels per thread

image00	0.000147	0.000149
image01 0.000262	0.000240
image02	0.000289	0.000285
image03	0.001473	0.001455
image04	0.001052	0.001070 
image05	0.001861	0.001874
image06	0.003532	0.003552

with uni, 11 pixels per thread

image00	0.002416 0.000148	16.32	0.000149
image01 0.036925 0.000257	143.67	0.000246
image02	0.033726 0.000301	112.04	0.000280
image03	0.340821 0.001454	234.40	0.001350
image04	0.151429 0.001043	145.18	0.000990
image05	0.445976 0.001832	234.43	0.001735
image06	0.588814 0.003531	166.75	0.003283

with uni, 16 pixels per thread

0.000155
0.000265
0.000280
0.001324
0.001066
0.001713
0.003251

with uni, 20 pixels

0.000150
0.000254
0.000292
0.001334 
0.000985
0.001708
0.003255

with uni, 24 pixels

0.000156
0.000252
0.000296
0.001336
0.001030
0.001795
0.003353

with uni, 30 pixels

0.000161
0.000258
0.000280
0.001364
0.001045
0.001785
0.003430

with uni, 34 pixels

0.000161
0.000249
0.000300
0.001369
0.001050
0.001801 
0.003459


with uni, 11 pixels per thread (fused for)

image00	0.002416 0.000148	16.32
image01 0.036925 0.000255	144.80
image02	0.033726 0.000270	124.91
image03	0.340821 0.001340	254.34
image04	0.151429 0.000985	153.73
image05	0.445976 0.001732	257.49
image06	0.588814 0.003292	178,86

with uni, 16 pixels per thread (fused for)


image00	0.002416 0.000153
image01 0.036925 0.000246
image02	0.033726 0.000280
image03	0.340821 0.001351
image04	0.151429 0.001059
image05	0.445976 0.001709
image06	0.588814 0.003229

	

histogram

Image		Pixels above threshold		Seq			Par				Speedup	

image00		324 (0.04%)					0.003208	0.000101  		31.76		
image01		12 (0.00%)					0.032379	0.002080		15.56
image02		0 (0.00%)					0.043784	0.002550		17.17
image03		24 (0.00%)					0.200681	0.011821		16.97
image04		0 (0.00%)					0.197973	0.013899		14.24				
image05		12 (0.00%)					0.267590	0.009225		29		
image06		48 (0.01%)					0.616924	0.024237		25.45	

Image		Pixels above threshold		Seq			Par				Speedup	

with square grid (2_) -> BETTER ON NO SQUARE IMAGES

image00		324 (0.04%)					0.003208	0.000104	  				
image01		12 (0.00%)					0.032379	0.001183	v		
image02		0 (0.00%)					0.043784	0.002071	v		
image03		24 (0.00%)					0.200681	0.011998		
image04		0 (0.00%)					0.197973	0.013978						
image05		12 (0.00%)					0.267590	0.005845	v	
image06		48 (0.01%)					0.616924	0.012902	v

image06_mono							0.616924	0.101625	

with square grid -> 11 pixels per thread


image00		324 (0.04%)					0.003208	0.000085	37.74					
image01		12 (0.00%)					0.032379	0.001043	31.04	
image02		0 (0.00%)					0.043784	0.001695	25.83	
image03		24 (0.00%)					0.200681	0.004591	43.71
image04		0 (0.00%)					0.197973	0.012721	15.56			
image05		12 (0.00%)					0.267590	0.004443	60.22
image06		48 (0.01%)					0.616924	0.009962	61.92

11pix fused for

image00	0.000085
image01	0.000980	33.03
image02	0.001585
image03	0.004139
image04	0.011853
image05	0.004139	64.65
image06	0.009093	67.84

with square grid (2_) -> 20 pixels per thread

image00		324 (0.04%)					0.003208	0.000085	  				
image01		12 (0.00%)					0.032379	0.001183		
image02		0 (0.00%)					0.043784	0.001747			
image03		24 (0.00%)					0.200681	0.004445		
image04		0 (0.00%)					0.197973	0.012535						
image05		12 (0.00%)					0.267590	0.004407	60.71	
image06		48 (0.01%)					0.616924	0.009452	65.26

image06_mono							0.616924	0.076647

20pix fused for

image00	0.000085
image01	0.001142 
image02	0.001656
image03	0.004094
image04	0.011985
image05	0.004135
image06	0.008684

image00		324 (0.04%)					0.003208	0.000084				
image01		12 (0.00%)					0.032379	0.001288		
image02		0 (0.00%)					0.043784	0.001861		
image03		24 (0.00%)					0.200681	0.004421
image04		0 (0.00%)					0.197973	0.012774				
image05		12 (0.00%)					0.267590	0.004250	
image06		48 (0.01%)					0.616924	0.009438

image06_mono							0.616924	0.075861

40px

0.000083
0.001293
0.001863
0.004427

0.075237


with grid UNI
image00		0.000420	7.63
image01		0.003539	9.14	
image02		0.005623
image03		0.034272
image04		0.034269
image05		0.033029
image06		0.085662 -> 0.063017

BOH

0.000086	22.66
0.001510	12.54
0.002200	11.90
0.007944	22.80
0.012946	9.19
0.007465	33.25
0.021255	21.93



smooth

Image		Pixels above threshold		Seq			Par				Speedup	

images00	0 (0.00%)					0.061197	0.000786		77.85
images01	0 (0.00%)					0.607604	0.006609		91.93
images02	0 (0.00%)					0.858147	0.009223		93.04
images03	0 (0.00%)					5.865732	0.061720		95.03
images04	0 (0.00%)					4.233016	0.043625		97.03
images05	0 (0.00%)					7.766216	0.081083		95.78
images06	0 (0.00%)					16.743480	0.159923		104.69

Better 2d because we need square of pixels

Consider an image processing algorithm. Some of these may be interested in lines, but most are interested in rectangular areas of the image (say, filters). If I make my threads 2D in a block, then all threads handling a certain rectangle end up on the same warp and can share memory efficiently, right?

Whereas, if I organized threads 1D in a block, then threads handling a line (rather than a rectangular block) would be able to share memory.
