darker

Image		Pixels above threshold		Seq			Par				Speedup

with square GRID

image00		111 (0,01%)					0,002416	0,000156		15,48
image01		231 (0,00%)					0,036925	0,000351		105,19
image02		135 (0,00%)					0,033726	0,000658		51,25
image03		735 (0,00%)					0,340821	0,002287		149
image04 	1503 (0,00%)				0,151429	0,001912		79,19
image05		9 (0,00%)					0,445976	0,003211		138,89
image06		4206 (0,00%)				0,588814	0,005860		100,48

111 231 135 735 1503 9 4206 


standard way uni (consecutive)

exe		grid		threads idle	speedup

0,000076	512x2		0			31,79 
0,000202	1024x10		0			182,80
0,000279	1440x10		0			120,88
0,001537	5024x20		482304		221,74
0,001091	4096x16		0			138,80
0,002090	3662x36		607892		213,39
0,003880	6400x40		0			151,76


standard way uni (right side overflow)

0,000074	32,65 
0,000215	171,74
0,000290	116,30
0,001656	205,81
0,001168	129,65
0,002199	202,81
0,004208	139,93


standard way square block (right side overflow)

0,000074	32x32 		0			32,65 
0,000218	64x160		0			169,38
0,000305	90x160		0			110,58
0,001683	314x314		0			202,51
0,001303	256x256		0			116,22
0,002352	229x566		40084		189,62
0,004261	400x640		0			138,19

standard way square block (consecutive)

0,000075	32x32 		0			32,21 
0,000235	64x160		0			157,13
0,000305	90x160		0			110,58
0,001742	314x314		0			195,65
0,001323	256x256		0			114,46
0,002327	229x566		40084		191,65
0,004415	400x640		0			133,37




square block square

0,000076	32X32		0			31,79
0,000232	102x102		41984		159,16
0,000317	120x120		0			106,39
0,001748	314X314		0			194,98
0,001260	256x256		0			120,18	
0,002286	360x360		36500		195,09
0,004462	506X506		9216		131,96	


uni square

0,000076	32X32		0			31,79
0,000209	102x102		41984		176,67
0,000276	120x120		0			122,20
0,001537	314X314		0			221,74
0,001085	256x256		0			139,57
0,002076	360x360		36500		214,82
0,003872	506X506		9216		152,07


uni more 11

0,000149	16,21
0,000248	148,89
0,000273	123,54
0,001355	251,53
0,000987	153,42
0,001738	256,60
0,003255	180,90


uni more 8

0,000147
0,000253
0,000271
0,001361
0,000995
0,001761
0,003346

image00	0,002416 0,000148	16,32	0,000149
image01 0,036925 0,000257	143,67	0,000246
image02	0,033726 0,000301	112,04	0,000280
image03	0,340821 0,001454	234,40	0,001350
image04	0,151429 0,001043	145,18	0,000990
image05	0,445976 0,001832	234,43	0,001735
image06	0,588814 0,003531	166,75	0,003283





with square GRID

0,000158
0,000330
0,000423
0,002301 
0,001921
0,003170
0,006453

with grid

0,000158
0,000341
0,000432
0,002270
0,001911
0,003222
0,005883


with grid UNI

image00		0,000151	16	0,000149
image01		0,000259	142	0,000276
image02		0,000332	101,58	0,000339
image03		0,001788	190,61	0,001574
image04		0,001290	117,38	0,001176
image05		0,002307	193,31	0,002142
image06		0,004403	133,73	0,003905

with only 1 row of indexes

image00	0,000150
image01	0,000246
image02	0,000318
image03	0,001661
image04	0,001213
image05	0,002231
image06	0,004082

with uni square, 4 pixels per thread

image00				0,000149	16,21 
image01 0,000269	0,000256	144,24
image02	0,000315	0,000293	115,11
image03	0,001541	0,001441	236,52
image04	0,001109	0,001067	141,92
image05	0,001982	0,001873	238,11
image06	0,003750	0,003541	166,28

with uni square, 8 pixels per thread

image00	0,000147	0,000149	16,21 
image01 0,000262	0,000240	153,85
image02	0,000289	0,000285	118,34
image03	0,001473	0,001455	234,24
image04	0,001052	0,001070	141,52 
image05	0,001861	0,001874	237,98
image06	0,003532	0,003552	165,77

with uni square, 10 pixels per thread

image00	0,002416 0,000148	16,32	0,000149	16,21 
image01 0,036925 0,000257	143,67	0,000246	150,10
image02	0,033726 0,000301	112,04	0,000280	120,45
image03	0,340821 0,001454	234,40	0,001350	252,46
image04	0,151429 0,001043	145,18	0,000990	152,96
image05	0,445976 0,001832	234,43	0,001735	257,05	
image06	0,588814 0,003531	166,75	0,003283	179,35	

with uni square, 16 pixels per thread

0,000155	15,59 
0,000265	139,34
0,000280	120,45
0,001324	257,42
0,001066	142,05
0,001713	260,35
0,003251	181,12
	
with uni square, 20 pixels

0,000150	16,11 
0,000254	145,37
0,000292	115,50
0,001334 	255,49
0,000985	153,74
0,001708	261,11
0,003255	180,90
	
with uni square, 24 pixels

0,000156	15,49 
0,000252	146,53
0,000296	113,94
0,001336	255,11
0,001030	147,02
0,001795	248,45
0,003353	175,61
	
with uni square, 30 pixels

0,000161	15,01 
0,000258	143,12
0,000280	120,45
0,001364	249,87
0,001045	144,91
0,001785	249,85
0,003430	171,67
	
with uni square, 40 px

0,000161	15,01 
0,000240	153,85
0,000305	110,58
0,001404	242,75
0,001073	141,13
0,001808	246,67
0,003480	169,20
	

with uni square, 11 pixels per thread (fused for)

image00	0,002416 0,000148	16,32
image01 0,036925 0,000255	144,80
image02	0,033726 0,000270	124,91
image03	0,340821 0,001340	254,34
image04	0,151429 0,000985	153,73
image05	0,445976 0,001732	257,49
image06	0,588814 0,003292	178,86

with uni square, 16 pixels per thread (fused for)


image00	0,002416 0,000153
image01 0,036925 0,000246
image02	0,033726 0,000280
image03	0,340821 0,001351
image04	0,151429 0,001059
image05	0,445976 0,001709
image06	0,588814 0,003229


square more(16x16), 4 pixels

0,000156
0,000337
0,000410
0,002259
0,001767
0,003221
0,006319

square more (16x16), 8 pixels

0,000155
0,000330
0,000427
0,002373
0,001710
0,003356
0,006057

square more (16x16), 11 pixels

0,000156
0,000340
0,000431
0,002465
0,001762
0,003474
0,006131

square more (16x16), 16 pixels

0,000160
0,000340
0,000458
0,002550
0,001815
0,003512
0,006370

square more (16x16), 20 pixels

0,000159
0,000349
0,000434
0,002542
0,001785
0,003545
0,006374

	

histogram

Image		Pixels above threshold		Seq			Par				Speedup	

image00		324 (0,04%)					0,003208	0,000101  		31,76		
image01		12 (0,00%)					0,032379	0,002080		15,56
image02		0 (0,00%)					0,043784	0,002550		17,17
image03		24 (0,00%)					0,200681	0,011821		16,97
image04		0 (0,00%)					0,197973	0,013899		14,24				
image05		12 (0,00%)					0,267590	0,009225		29		
image06		48 (0,01%)					0,616924	0,024237		25,45	

Image		Pixels above threshold		Seq			Par				Speedup	

with square grid (2_) -> BETTER ON NO SQUARE IMAGES

image00		324 (0,04%)					0,003208	0,000104	  				
image01		12 (0,00%)					0,032379	0,001183	v		
image02		0 (0,00%)					0,043784	0,002071	v		
image03		24 (0,00%)					0,200681	0,011998		
image04		0 (0,00%)					0,197973	0,013978						
image05		12 (0,00%)					0,267590	0,005845	v	
image06		48 (0,01%)					0,616924	0,012902	v

image06_mono							0,616924	0,101625	

with square grid -> 11 pixels per thread


image00		324 (0,04%)					0,003208	0,000085	37,74					
image01		12 (0,00%)					0,032379	0,001043	31,04	
image02		0 (0,00%)					0,043784	0,001695	25,83	
image03		24 (0,00%)					0,200681	0,004591	43,71
image04		0 (0,00%)					0,197973	0,012721	15,56			
image05		12 (0,00%)					0,267590	0,004443	60,22
image06		48 (0,01%)					0,616924	0,009962	61,92

11pix fused for

image00	0,000085
image01	0,000980	33,03
image02	0,001585
image03	0,004139
image04	0,011853
image05	0,004139	64,65
image06	0,009093	67,84

with square grid (2_) -> 20 pixels per thread

image00		324 (0,04%)					0,003208	0,000085	  				
image01		12 (0,00%)					0,032379	0,001183		
image02		0 (0,00%)					0,043784	0,001747			
image03		24 (0,00%)					0,200681	0,004445		
image04		0 (0,00%)					0,197973	0,012535						
image05		12 (0,00%)					0,267590	0,004407	60,71	
image06		48 (0,01%)					0,616924	0,009452	65,26

image06_mono							0,616924	0,076647

20pix fused for

image00	0,000085
image01	0,001142 
image02	0,001656
image03	0,004094
image04	0,011985
image05	0,004135
image06	0,008684

image00		324 (0,04%)					0,003208	0,000084				
image01		12 (0,00%)					0,032379	0,001288		
image02		0 (0,00%)					0,043784	0,001861		
image03		24 (0,00%)					0,200681	0,004421
image04		0 (0,00%)					0,197973	0,012774				
image05		12 (0,00%)					0,267590	0,004250	
image06		48 (0,01%)					0,616924	0,009438

image06_mono							0,616924	0,075861

40px

0,000083
0,001293
0,001863
0,004427

0,075237


with grid UNI
image00		0,000420	7,63
image01		0,003539	9,14	
image02		0,005623
image03		0,034272
image04		0,034269
image05		0,033029
image06		0,085662 -> 0,063017





square grid square block (monocromo)

image00_mono	0,000484
image01_mono	0,004255
image02_mono	0,005988
image03_mono	0,040572
image04_mono	0,026993
image05_mono	0,053261
image06_mono	0,105229

square grid square block (monocromo) -> global atomic

image00_mono	0,003255	0,99	
image01_mono	0,032091	1,01	
image02_mono	0,045119	0,97	
image03_mono	0,308584	0,65	
image04_mono	0,205138	0,97	
image05_mono	0,405159	0,66	
image06_mono	0,801113	0,77	

standard square blocks (monocromo, consecutive) -> shared atomic

image00_mono	0,000491	6,53
image01_mono	0,004327	7,48
image02_mono	0,006063	7,22
image03_mono	0,040413	4,97
image04_mono	0,026800	7,39
image05_mono	0,052464	5,10
image06_mono	0,105837	5,83


square grid uni block (monocromo)

image00_mono	0,000487
image01_mono	0,004291
image02_mono	0,006024
image03_mono	0,040837
image04_mono	0,027156
image05_mono	0,053589
image06_mono	0,105850

standard grid uni block (monocromo, consecutive)

image00_mono	0,000484	6,63
image01_mono	0,004303	7,52
image02_mono	0,006033	7,26
image03_mono	0,040834	4,91
image04_mono	0,027158	7,29
image05_mono	0,053584	4,99
image06_mono	0,105860	5,83

as above, real images00

image00		0,000089	36,04
image01		0,001516	21,36
image02		0,002193	19,97
image03		0,007748	25,90
image04		0,012874	15,38
image05		0,007207	37,13
image06		0,020951	29,45

standard uni blocks (monocromo, consecutive) -> global atomic

image00_mono	0,003254	0,99
image01_mono	0,032091	1,01
image02_mono	0,045119	0,97
image03_mono	0,308588	0,65
image04_mono	0,205136	0,97
image05_mono	0,405155	0,66
image06_mono	0,801117	0,77

as above, real images00

image00		0,000213	15,06
image01		0,009450	3,43
image02		0,014056	3,11
image03		0,031822	6,31
image04		0,089310	2,22
image05		0,029834	8,97
image06		0,081793	7,54
	
standard grid uni block (monocromo, cons, warp)


image00_mono	0,000420	7,64
image01_mono	0,003656	8,86
image02_mono	0,005133	8,53
image03_mono	0,034769	5,77
image04_mono	0,023135	8,56
image05_mono	0,045660	5,86
image06_mono	0,090158	6,84

the same as above but with real images00

image00_mono	0,000220	14,58
image01_mono	0,001940	16,69
image02_mono	0,002881	15,20
image03_mono	0,016112	12,46
image04_mono	0,014625	13,54
image05_mono	0,021048	12,71
image06_mono	0,042456	14,53

standard grid uni block (cons, warp) -> 10px

image00		0,000076	42,21
image01		0,001115	29,04
image02		0,001634	26,80
image03		0,004912	40,86
image04		0,011365	17,42
image05		0,004518 	59,23
image06		0,010847	56,88

20pix

image00		0,000076	42,21
image01		0,001151	28,13
image02		0,001725	25,38
image03		0,004777	42,01
image04		0,011961	16,55
image05		0,004312	62,06
image06		0,010226	60,33


30px

image00		0,000080	40,10
image01		0,001264	25,62
image02		0,001778	24,63
image03		0,004724	42,48
image04		0,012325	16,06
image05		0,004278	62,55
image06		0,010026	61,53

40px

image00		0,000085	37,74
image01		0,001361	23,79
image02		0,001860	23,54
image03		0,004720	42,52 
image04		0,012538	15,79
image05		0,004282	62,49
image06		0,009964	61,92



FIXED -> 30 30

image00		0,000090	35,64
image01		0,001160	27,91
image02		0,001659	26,39
image03		0,004705	42,65
image04		0,012839	15,42
image05		0,004266	62,73
image06		0,009917	62,21

FIXED -> 45 30

image00		0,000101	31,76
image01		0,001111	29,14
image02		0,001640	26,70
image03		0,004691	42,78
image04		0,012411	15,95
image05		0,004278	62,55
image06		0,009895	62,35

FIXED -> 45 45

image00		0,000117	27,42
image01		0,001057	30,63
image02		0,001576	27,78
image03		0,004715	42,56
image04		0,012093	16,37
image05		0,004299	62,24
image06		0,009833	62,74

FIXED -> 60 45

image00		0,000127	25,26
image01		0,001062	30,49
image02		0,001553	28,19
image03		0,004698	42,72
image04		0,011871	16,68
image05		0,004260	62,81
image06		0,009756	63,24

FIXED -> 60 60

image00		0,000149	21,53
image01		0,001095	29,57
image02		0,001569	27,91
image03		0,004727	42,45
image04		0,011861	16,69
image05		0,004727	56,61
image06		0,011820	52,19

FIXED -> 75 60

image00		0,000166	19,3
image01		0,001111	29,1
image02		0,001588	27,5
image03		0,004747	42,2
image04		0,011514	17,1
image05		0,004280	62,5
image06		0,009832	62,7













uni, no square 10 pixels per thread

image00_mono	0,000605	52x2
image01_mono	0,004844	103x10
image02_mono	0,006770	144x10
image03_mono	0,045320 	503x20
image04_mono	0,030306	410x16
image05_mono	0,059685	367x36 
image06_mono	0,117485	640x40

uni, square 10 pixels per thread (32x8)

image00_mono	0,000585	11x11
image01_mono	0,004534	32x32
image02_mono	0,006272	38x38
image03_mono	0,041540	100x100
image04_mono	0,027716	81x81
image05_mono	0,054600	114x114
image06_mono	0,107575	160x160




fixed grid 15x15

image00_mono	0,000511
image01_mono	0,005220
image02_mono	0,007104
image03_mono	0,048425
image04_mono
image05_mono
image06_mono

15x15


















smooth

Image		Pixels above threshold		Seq			Par				Speedup	

images00	0 (0,00%)					0,067991	0,000786		77,85
images01	0 (0,00%)					0,672104	0,006609		91,93
images02	0 (0,00%)					0,947251	0,009223		93,04
images03	0 (0,00%)					6,496388	0,061720		95,03
images04	0 (0,00%)					4,695295	0,043625		97,03
images05	0 (0,00%)					8,563947	0,081083		95,78
images06	0 (0,00%)					18,571981	0,159923		104,69

With method 2 (shared memory)		

0	0,000788
1	0,006697
2	0,009300
3	0,062411
4	0,042933
5	0,081961
6	0,161799

block 32x8 => no shared

images00	0,000781	87,06
images01	0,006625	101,45
images02	0,009229	102,64
images03	0,061547 	105,55
images04	0,042587	110,25
images05	0,080832	105,95
images06	0,159628	116,35


block 32x16 => no shared

images00	0,000781	87,06
images01	0,006570	102,30
images02	0,009174	103,25
images03	0,061110	106,31
images04	0,042330	110,92
images05	0,080214	106,76 
images06	0,158552	117,13

block 32x32 => no shared

images00	0,000805	84,4
images01	0,006653	101,0
images02	0,009286	102,0
images03	0,061723	105,2
images04	0,042895	109,4
images05	0,081155	105,5
images06	0,160441	115,7

block 32x16 => shared

images00	0,000791
images01	0,006650
images02	0,009268
images03	0,061847
images04	0,042608
images05	0,081235
images06	0,160371

block 32x8 => shared

images00	0,000787
images01	0,006702
images02	0,009337 
images03	0,062366
images04	0,042970
images05	0,081921
images06	0,161783






Better 2d because we need square of pixels

Consider an image processing algorithm, Some of these may be interested in lines, but most are interested in rectangular areas of the image (say, filters), If I make my threads 2D in a block, then all threads handling a certain rectangle end up on the same warp and can share memory efficiently, right?

Whereas, if I organized threads 1D in a block, then threads handling a line (rather than a rectangular block) would be able to share memory,
